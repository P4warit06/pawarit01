>>> Before do this practice
- Let XXX = your name (e.g. John)
- Let YYY = last 3 student id (e.g. 66130500999 YYY= 999)
How to use XXX and YYY -> If in problems let you create function or return some value
that contain with XXX, YYY you have to use XXX and YYY in your code.
*** For example,Let XXX = Cat and YYY = 987
Problems: Create function helloXXX and return myIdYYY, You can do like this

```
public String helloCat(String myId987){
    return myId987;
}
```

1.Create package 'Main.main' with class name 'MainXXX' (file name 'Main.java').
2.in MainXXX or MainXXX.java, Create a method 'main' with parameter 'String[] args' (This method will execute all code that you write).
3.Create package 'Function.math' with class name 'MathFuncYYY' (file name 'MathFuncYYY.java').
3.1.Create 4 basics function in MathFuncYYY.java (use 'public static' for create).
3.2 function  name "add" function with 2 parameter (type int) and return.
3.3 function  name "subtract" function with 2 parameter (type int) and return.
3.4 function  name "multiply" function with 2 parameter (type double) and return.
3.5 function  name  "divide" function  with 2 parameter (type double) and return.

4.Create package 'Function.utils' with class name 'UtilsYYY' (file name 'UtilsYYY.java').
4.1 Create 2 public static function named 'checkString' and 'checkInteger' in UtilsYYY.java

4.2 checkString function with 1 parameter (type String) and return true if that string not blank or not empty , if that string is blank or empty return false. (Use isBlank() function to check)

4.3 checkInteger function with 1 parameter (type int) and return true, if parameter is 0 return false.

5.Go to
MainXXX or MainXXX.java and import package 'Function.math' and then test your 4 basics function in 'main' method. Try to print out the result.
5.1 Go to MathFuncYYY or MathFuncYYY.java, then edit subtract and multiply function to get 2 parameter instead of old.
5.2 Test again and print out the result in MainXXX or MainXXX.java (You will notice a function can get many parameter maybe 1, 2, 3, or more).

6.Create package 'javaType.type' with class name 'TypeYYY' (file name 'TypeYYY.java').

7.in class TypeYYY, Create functions following these.
* guide, If you declare function you must assign type for tell the function that it must return type that you assign, parameter must be same type for return.
* Parameter can be anything you need to assign 
7.1 function  name "intType" with 1 parameter and return that parameter .
7.2 function  name "longType" with 1 parameter and return that parameter.
7.3 function  name "doubleType" with 1 parameter and return that parameter.
7.4 function  name "booleanType" with 1  parameter and return that parameter.
7.5 function  name "charType" with 1 parameter and return that parameter.
7.6 function  name "StringType" function 1 with  and return that parameter.

8.Go to MainXXX or MainXXX.java and import package 'javaType.type' and then test your 7 function in 'main' method. Try to print out the result.

9.Create package 'displayDetail' with class name 'DisplayYYY' (file name 'DisplayYYY.java'). and create following function.
9.1 'nameDisplay' with 1 parameter (String name) and return name.
9.2 'ageDisplay' with 1 parameter (int age) and return age.
9.3 'groupBloodDisplay' with 1 parameter (char groupBlood) and return groupBlood. ('A', 'B', 'O', 'AB')
9.4 'allDisplay' with 3 parameter (String name, int age, char groupBlood) and return all value (use + for connect string).
10.Go to MainXXX or MainXXX.java and import package 'displayDetail' and then test your 3 function in 'main' method. Try to print out the result.

--- Problems ---
*Everything problems will be in this file
*You can use 'public static' (recommended) or 'public' for create function
11.Create package 'javaProblems' with class name 'ProblemsYYY' (file name 'ProblemsYYY.java').
12. Create 5 formula math function
* You can assign type of parameter and return by yourself.
12.1 circleArea (formula: PI * radius * radius)
12.2 triangleArea (formula: 0.5 * base * height)
12.3 rectangleArea (formula: width * height)
12.4 squareArea (formula: width * width)
12.5 SphereArea (formula: 4 * PI * radius * radius)

13.Create 'celsiusToKevin' function with 1 parameter (double celsius) and return celsius to kevin (formula: celsius + 273.15)
14.Create 'kevinToCelsius' function with 1 parameter (double kevin) and return kevin to celsius (formula: kevin - 273.15)
15.Create 'celsiusToFahrenheit' function with 1 parameter (double celsius) and return celsius to fahrenheit (formula: (celsius * 9/5) + 32)

--- If else logic ---
16. Create 'checkGrade' function with 1 parameter (int score) and return grade (A, B, C, D, F)
* A = 80 - 100
* B = 70 - 79
* C = 60 - 69
* D = 50 - 59
* F = 0 - 49
* If score is not in range 0 - 100 return "Invalid score"

17. Create calculateBMI function with 2 parameter (weight, height) and return BMI (formula: weight / (height * height))
18. Create 'checkBMI' function with 2 parameter (weight, height) and return BMI (formula: weight / (height * height))
* BMI < 18.5, print "Underweight"
* BMI >= 18.5 and BMI <= 24.9, print "Normal weight"
* BMI >= 25 and BMI <= 29.9, print "Overweight"
* BMI >= 30, print "Obesity"

19. Create 'checkName' function with 1 parameter (name) and return true if name is "WeLoveKK", false if name is not "WeLoveKK". (case-sensitive)

20.Create 'checkOddOrEvenNumber' function with 1 parameter (int number) and return true if number is odd number, false if number is even number.

21 (challenge). Create 'checkLeapYear' function with 1 parameter (int year) and return true if year is leap year, false if year is not leap year. (leap year is year that can divide by 4 and can not divide by 100 or can divide by 400).

--- Obj and Class I ---
** Create package 'OOP' with class name 'OOPYYY' (file name 'OOPYYY.java').
** attribute = property of object (e.g. name, age, groupBlood)

22. Create class 'Student' with 3 private attribute (name, age, groupBlood) then create constructor with 3 parameter (name: String, age: int, groupBlood: String) .
22.1 Create Getter and Setter for all attribute.
22.2 Create 'say' function with 1 parameter (String message) and then print out the message to console. The output should be like this 'John say: Hello' (when John = 'name' attribute and "Hello" = 'message' parameter)
22.3 Override 'toString' function to print all of attribute. Output should be like this
    'Student(name: John, age: 20, groupBlood: A)'
22.4 Override 'equals' function to compare all of attribute from own class to giving class.
23. In class 'OOPYYY', create object named 'student1' from class 'Student' with name 'John',
    age 20, groupBlood 'A'. Then print out the result using 'toString' method.
23.1 In class 'OOPYYY', call 'say' method from 'student1' object with message 'Hello'. The result should be like this 'John say: Hello'
24. Change the attribute 'name' of 'student1' to 'Karn' and print out the result using 'getName' method. The result should be like this 'student1's name is: Karn'
25. Change the attribute 'age' of 'student1' to 25 and print out the result using 'getAge' method. The result should be like this 'student1's age is: 25'
26. Change the attribute 'groupBlood' of 'student1' to 'AB' and print out the result using 'getName' method. The result should be like this 'student1's groupBlood is: AB'
27. In class 'OOPYYY', create object named 'student2' from class 'Student' with name 'Buss', age 10, groupBlood 'B'. Then print out the result using 'toString' method.
28. compare two props of objects using 'equals' method. The result should be like this 'student1 is equal to student2: false'
29. on 'toString' method, use the StringBuilder class to return the string instead of using '+' to connect the string.
29.1 Show all usage of all function on 'OOPYYY.java'

--- Obj and Class II ---
30. Create class 'Employee' with 1 private final attribute (id) and 5 private attribute (fname, lname, age, salary, bonus) then create constructor with 3 parameter (fname: String, lname: String, age: int).
30.1 While initialize the age in constructor use 'checkInteger' method in 'MathFuncYYY' class. throw 'IllegalArgumentException' error with the error message 'age must be positive'
31. Create Getter and Setter for all attribute except 'fname', 'lname', 'age' and 'id';
31.1 For each setter, use 'checkString' or 'checkInteger' depends on the type of function.
32. Create function 'addBonus' with 1 parameter (bonus: int) and then add bonus from parameter to current bonus.
33. Create function 'getFinalSalary' that return the sum of product and bonus.
34. Create function 'addAge' that add current age by 1 and then return the new age.
35. Create function 'getFullName' that return the full name of employee. The output should be like this 'John Doe' (fname + " " + lname)
36. Create function 'getSalaryPerDay' that return the salary per day of employee. The output should be like this '1000' if the  salary is 30,000.
37. Create function 'getSalaryPerWeek' that return the salary per hour of employee. The output should be like this '4285' if the  salary is 30,000.
38. Override 'toString' function that return all attribute. The output should be like this 'Employed(id=1, firstName=John, lastName=Doe, age=20, salary=10000, bonus=5000, finalSalary=15000)'
39. Override 'equals' function to compare all of attribute from own class to giving class.
40. Show all usage of all function on 'OOPYYY.java'